/*
 * This source file was generated by the Gradle 'init' task
 */

package org.example;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

public class AppTest {

    @Test
    void testSimpleIncrement() {
        GroceryCounter counter = new GroceryCounter();
        counter.ones(); // +$1.00
        counter.tenths(); // +$0.10
        assertEquals("$1.10", counter.total());
    }

    @Test
    void testOverflow() {
        GroceryCounter counter = new GroceryCounter();
        for (int i = 0; i < 10000; i++) {
            counter.hundredths(); // +$0.01 each = $100.00
        }
        assertEquals("$0.00", counter.total());
        assertEquals(1, counter.overflows());
    }

    @Test
    void testDecrementAndUnderflow() {
        GroceryCounter counter = new GroceryCounter(0);
        counter.decrementOnes(); // -$1.00 â†’ underflow
        assertEquals("$99.00", counter.total());
        assertEquals(1, counter.overflows());
    }

    @Test
    void testCustomStartAndMax() {
        GroceryCounter counter = new GroceryCounter(5000, 15000); // $50.00
        counter.tens(); // +$10.00
        assertEquals("$60.00", counter.total());
    }

    @Test
    void testClearMethod() {
        GroceryCounter counter = new GroceryCounter();
        counter.ones();
        counter.tens();
        counter.clear();
        assertEquals("$0.00", counter.total());
        assertEquals(0, counter.overflows());
    }
}
